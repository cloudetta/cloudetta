# ================== Cloudetta .env (locale, completo) ==================
# Note: il bootstrap auto-seleziona "local" se i domini prod sono vuoti.
# In prod valorizza i *_DOMAIN pubblici e, se vuoi forzare, imposta:
# BOOTSTRAP_PROFILES=prod

TZ=Europe/Rome

# --- Domini pubblici (prod, opzionali) ---
CADDY_EMAIL=admin@example.com
ACME_EMAIL=${CADDY_EMAIL}

DJANGO_DOMAIN=
ODOO_DOMAIN=
REDMINE_DOMAIN=
NEXTCLOUD_DOMAIN=
N8N_DOMAIN=
WIKI_DOMAIN=
MAUTIC_DOMAIN=
MATTERMOST_DOMAIN=
KEYCLOAK_DOMAIN=
GRAFANA_DOMAIN=
LOKI_DOMAIN=
UPTIMEKUMA_DOMAIN=
ERRORS_DOMAIN=
MINIO_DOMAIN=
COLLABORA_DOMAIN=
CROWDSEC_DOMAIN=

# ====== Profili ======
# Base: lasciando vuoti i domini → local; con domini → prod
# Extra: abilita servizi SSO/monitoring/logging/… già in locale
# (puoi togliere quelli che non vuoi)
# Esempi: "sso monitoring logging uptime sentry office s3 backup security"
BOOTSTRAP_EXTRA_PROFILES="analytics bi sso monitoring logging uptime sentry office s3 backup"
# in local security da conflitti va rimosso
# BOOTSTRAP_EXTRA_PROFILES="sso monitoring logging uptime sentry office s3 backup security"
# BOOTSTRAP_PROFILES=local
# BOOTSTRAP_PROFILES=prod

# ====== Admin unificato ======
ADMIN_USER=admin
ADMIN_PASS=ChangeMe!123
ADMIN_EMAIL=admin@example.com

# ====== Django ======
DJANGO_SECRET_KEY=dev_change_me
DJANGO_DB_PASSWORD=dev_django_pw
DJANGO_DEBUG=True
DJANGO_ALLOWED_HOSTS=django,localhost,127.0.0.1,django.localhost,django.example.com
DJANGO_CSRF_TRUSTED_ORIGINS=http://django.localhost,http://django.example.com,https://django.localhost,https://django.example.com
DJANGO_USE_X_FORWARDED_HOST=True
DJANGO_SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
DJANGO_ADMIN_USER=${ADMIN_USER}
DJANGO_ADMIN_EMAIL=${ADMIN_EMAIL}
DJANGO_ADMIN_PASS=${ADMIN_PASS}

# Stripe (demo)
STRIPE_PUBLIC_KEY=pk_test_xxx
STRIPE_SECRET_KEY=sk_test_xxx
STRIPE_WEBHOOK_SECRET=whsec_xxx

# ====== Odoo ======
ODOO_DB_PASSWORD=dev_odoo_db_pw
ODOO_DB=cloudetta
ODOO_MASTER_PASSWORD=${ADMIN_PASS}
ODOO_DEMO=true
ODOO_LANG=it_IT

# ====== Redmine ======
REDMINE_DB_PASSWORD=dev_redmine_db_pw
REDMINE_ROOT_PW=dev_redmine_root_pw
REDMINE_SECRET_KEY_BASE=

# ====== Nextcloud ======
NEXTCLOUD_DB_PASSWORD=dev_nextcloud_db_pw
NEXTCLOUD_ROOT_PW=dev_nextcloud_root_pw
NEXTCLOUD_ADMIN_USER=${ADMIN_USER}
NEXTCLOUD_ADMIN_PASS=${ADMIN_PASS}
PUBLIC_DOMAIN=
# aggiungi qui eventuali altri host locali che userai via Caddy
TRUSTED_DOMAINS=localhost,127.0.0.1,nextcloud,nextcloud.localhost,${PUBLIC_DOMAIN}

# ====== n8n ======
N8N_PASSWORD=${ADMIN_PASS}

# ====== Mail ======
MAIL_PROVIDER=sendgrid
MAIL_USER=admin@example.com
MAIL_PASS=change_me_mail_password
# opzionale SMTP diretto
# MAIL_PROVIDER=smtp
# MAIL_HOST=smtp.example.com
# MAIL_PORT=587
# MAIL_ENCRYPTION=tls
# MAIL_FROM_NAME="Cloudetta"
# MAIL_FROM_ADDRESS=admin@example.com


# Email Configuration yahoo
# MAIL_PROVIDER=smtp
# MAIL_USER=antonio.trento@yahoo.com
# MAIL_PASS=hgdxkvlxwnnkujsr
# MAIL_HOST=smtp.mail.yahoo.com
# MAIL_PORT=587
# MAIL_ENCRYPTION=tls
# MAIL_FROM_NAME="Antonio Trento"
# MAIL_FROM_ADDRESS=antonio.trento@yahoo.com

# ====== DokuWiki (Basic Auth) ======
WIKI_BCRYPT_HASH=

# ====== Mautic ======
MAUTIC_DB_PASSWORD=dev_mautic_db_pw
MAUTIC_ROOT_PW=dev_mautic_root_pw
# MAUTIC_DOMAIN=mautic.example.com

# ==== Frequenze cron Mautic (puoi cambiare) ====
SEG_EVERY=5m               # segments:update / rebuild
CAMP_UPDATE_EVERY=5m       # campaigns:update / rebuild
TRIGGER_EVERY=5m           # campaigns:trigger
MSG_SEND_EVERY=5m          # messages:send (fallback emails:send)
MAIL_SEND_EVERY=5m         # emails:send (separato, resta comodo)
FETCH_EVERY=10m            # email fetcher (IMAP/POP)
WEBHOOKS_EVERY=2m          # webhooks:process
CLEANUP_AT=03:30           # manutenzione giornaliera HH:MM

# (opzionali) override espliciti dei nomi comando, se mai servisse
# MAUTIC_SEG_CMD=
# MAUTIC_CAMP_UPDATE_CMD=
# MAUTIC_TRIGGER_CMD=
# MAUTIC_MSG_SEND_CMD=
# MAUTIC_MAIL_SEND_CMD=
# MAUTIC_FETCH_CMD=
# MAUTIC_WEBHOOKS_CMD=
# MAUTIC_CLEANUP_CMD=


# ====== Mattermost ======
MATTERMOST_DB_PASSWORD=dev_mattermost_db_pw
MATTERMOST_SITEURL=http://chat.localhost
MATTERMOST_ADMIN_USER=${ADMIN_USER}
MATTERMOST_ADMIN_EMAIL=${ADMIN_EMAIL}
MATTERMOST_ADMIN_PASS=${ADMIN_PASS}
MATTERMOST_TEAM_NAME=cloudetta
MATTERMOST_TEAM_DISPLAY=Cloudetta

# ================== EXTRA STACK ==================

# ====== SSO (Keycloak) ======
# In locale verrà esposto come http://sso.localhost
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=ChangeMe!123
KEYCLOAK_DB_PASSWORD=kc_db_pw
# opzionali (utile in prod dietro Caddy):
# KEYCLOAK_FRONTEND_URL=https://sso.tuodominio.tld
# KEYCLOAK_PROXY=edge

# ====== Monitoring (Prometheus/Grafana) ======
# In locale:
# - Prometheus: http://prometheus.localhost
# - Grafana:    http://grafana.localhost (login: ${ADMIN_USER}/${ADMIN_PASS} oppure credenziali proprie)
PROM_ADMIN_USER=promadmin
PROM_ADMIN_PASS=ChangeMe!123

# ====== Logging (Loki/Promtail) ======
# Loki sarà consultabile da Grafana; Promtail legge i log dei container
DOCKER_LOG_DIR=/var/lib/docker/containers

# ====== Uptime-Kuma ======
# http://uptime.localhost
# (config utenti dalla UI)
# UPTIMEKUMA_DOMAIN=

# ====== Error tracking (GlitchTip/Sentry) ======
# Scegli l’implementazione: glitchtip | sentry
ERRORS_CHOICE=glitchtip
# GlitchTip (Django compatibile con SDK Sentry):
GLITCHTIP_SECRET_KEY=dev_secret_glitch
GLITCHTIP_DB_PASSWORD=gt_db_pw
# Se scegli Sentry, ignora le 2 variabili sopra e usa:
# SENTRY_SECRET_KEY=sentry_dev_secret
# SENTRY_RELAY_UPSTREAM_URL=http://sentry-web:9000/

# ====== Backup (MinIO + Restic) ======
# MinIO: http://minio.localhost (console: http://minio-console.localhost)
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=miniochange
# Restic: repository su MinIO (bucket "cloudetta-backups")
RESTIC_REPO=s3:http://minio:9000/cloudetta-backups
RESTIC_PASSWORD=restic_change
RESTIC_ACCESS_KEY_ID=${MINIO_ROOT_USER}
RESTIC_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}

# ====== Office (Collabora) ======
# Collabora Online per Nextcloud: http://office.localhost
# In prod usa COLLABORA_DOMAIN per TLS via Caddy
# COLLABORA_DOMAIN=

# ====== Security (CrowdSec) ======
# In locale: crowdsec agent interno; il bouncer lato Caddy si abilita nel profilo "security"
# Per prod puoi impostare CROWSEC collettore etc. se serve
# CROWDSEC_LAPI_KEY= # se integri bouncer esterni

# ====== Superset ======
SUPERSET_SECRET_KEY=change_this_random_long_secret
SUPERSET_ADMIN_USER=${ADMIN_USER}
SUPERSET_ADMIN_EMAIL=${ADMIN_EMAIL}
SUPERSET_ADMIN_PASS=${ADMIN_PASS}
# opzionale: dominio pubblico
SUPERSET_DOMAIN=

# ====== Umami (cookieless analytics) ======
UMAMI_ADMIN_USERNAME=${ADMIN_USER}
UMAMI_ADMIN_PASSWORD=${ADMIN_PASS}
UMAMI_DB_PASSWORD=${ADMIN_PASS}
UMAMI_DOMAIN=
UMAMI_HASH_SALT=6458bbe57e0e1db1f97d6ebc78add11f248c44b001a12f3b221fcd71312e3231

